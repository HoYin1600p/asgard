// priority: 0

settings.logAddedRecipes = true
settings.logRemovedRecipes = true
settings.logSkippedRecipes = false
settings.logErroringRecipes = false

console.info('Hello, World! (You will see this line every time server resources reload)')

onEvent('recipes', event => {
	  // Compression
		event.shapeless('1x kubejs:white_unobtanium_block', '4x kubejs:white_unobtanium')
		event.shapeless('1x kubejs:orange_unobtanium_block', '4x kubejs:orange_unobtanium')
		event.shapeless('1x kubejs:magenta_unobtanium_block', '4x kubejs:magenta_unobtanium')
		event.shapeless('1x kubejs:light_blue_unobtanium_block', '4x kubejs:light_blue_unobtanium')
		event.shapeless('1x kubejs:yellow_unobtanium_block', '4x kubejs:yellow_unobtanium')
		event.shapeless('1x kubejs:lime_unobtanium_block', '4x kubejs:lime_unobtanium')
		event.shapeless('1x kubejs:pink_unobtanium_block', '4x kubejs:pink_unobtanium')
		event.shapeless('1x kubejs:gray_unobtanium_block', '4x kubejs:gray_unobtanium')
		event.shapeless('1x kubejs:light_gray_unobtanium_block', '4x kubejs:light_gray_unobtanium')
		event.shapeless('1x kubejs:cyan_unobtanium_block', '4x kubejs:cyan_unobtanium')
		event.shapeless('1x kubejs:blue_unobtanium_block', '4x kubejs:blue_unobtanium')
		event.shapeless('1x kubejs:brown_unobtanium_block', '4x kubejs:brown_unobtanium')
		event.shapeless('1x kubejs:green_unobtanium_block', '4x kubejs:green_unobtanium')
		event.shapeless('1x kubejs:red_unobtanium_block', '4x kubejs:red_unobtanium')
		event.shapeless('1x kubejs:purple_unobtanium_block', '4x kubejs:purple_unobtanium')
		event.shapeless('1x kubejs:black_unobtanium_block', '4x kubejs:black_unobtanium')
		event.shapeless('1x kubejs:rainbow_unobtanium_block', '4x kubejs:rainbow_unobtanium')
		// Functional Storage    
    	event.custom({
        	type: "functionalstorage:custom_compacting",
        	higher_input: {
            	count: 1,
            	item: "the_vault:wooden_log"
        	},
        	lower_input: {
            	count: 4,
            	item: "the_vault:wooden_planks"
        	}
        })
    	event.custom({
        	type: "functionalstorage:custom_compacting",
        	higher_input: {
            	count: 1,
            	item: "the_vault:driftwood_log"
        	},
        	lower_input: {
            	count: 4,
            	item: "the_vault:driftwood_planks"
        	}
        })
   		 event.custom({
        	type: "functionalstorage:custom_compacting",
        	higher_input: {
            	count: 1,
            	item: "the_vault:overgrown_wooden_log"
        	},
        	lower_input: {
            	count: 4,
            	item: "the_vault:overgrown_wooden_planks"
        	}
        })
    
    	 
    	

       	// Decompression
		event.shapeless('5x kubejs:white_unobtanium', '1x kubejs:white_unobtanium_block')
		event.shapeless('5x kubejs:orange_unobtanium', '1x kubejs:orange_unobtanium_block')
		event.shapeless('5x kubejs:magenta_unobtanium', '1x kubejs:magenta_unobtanium_block')
		event.shapeless('5x kubejs:light_blue_unobtanium', '1x kubejs:light_blue_unobtanium_block')
		event.shapeless('5x kubejs:yellow_unobtanium', '1x kubejs:yellow_unobtanium_block')
		event.shapeless('5x kubejs:lime_unobtanium', '1x kubejs:lime_unobtanium_block')
		event.shapeless('5x kubejs:pink_unobtanium', '1x kubejs:pink_unobtanium_block')
		event.shapeless('5x kubejs:gray_unobtanium', '1x kubejs:gray_unobtanium_block')
		event.shapeless('5x kubejs:light_gray_unobtanium', '1x kubejs:light_gray_unobtanium_block')
		event.shapeless('5x kubejs:cyan_unobtanium', '1x kubejs:cyan_unobtanium_block')
		event.shapeless('5x kubejs:blue_unobtanium', '1x kubejs:blue_unobtanium_block')
		event.shapeless('5x kubejs:brown_unobtanium', '1x kubejs:brown_unobtanium_block')
		event.shapeless('5x kubejs:green_unobtanium', '1x kubejs:green_unobtanium_block')
		event.shapeless('5x kubejs:red_unobtanium', '1x kubejs:red_unobtanium_block')
		event.shapeless('5x kubejs:purple_unobtanium', '1x kubejs:purple_unobtanium_block')
		event.shapeless('5x kubejs:black_unobtanium', '1x kubejs:black_unobtanium_block')
		event.shapeless('5x kubejs:rainbow_unobtanium', '1x kubejs:rainbow_unobtanium_block')

		// Dye
		event.shapeless('8x kubejs:white_unobtanium_block', ['8x architects_palette:unobtanium_block', 'minecraft:white_dye'])
		event.shapeless('8x kubejs:orange_unobtanium_block', ['8x architects_palette:unobtanium_block', 'minecraft:orange_dye'])
		event.shapeless('8x kubejs:magenta_unobtanium_block', ['8x architects_palette:unobtanium_block', 'minecraft:magenta_dye'])
		event.shapeless('8x kubejs:light_blue_unobtanium_block', ['8x architects_palette:unobtanium_block', 'minecraft:light_blue_dye'])
		event.shapeless('8x kubejs:yellow_unobtanium_block', ['8x architects_palette:unobtanium_block', 'minecraft:yellow_dye'])
		event.shapeless('8x kubejs:lime_unobtanium_block', ['8x architects_palette:unobtanium_block', 'minecraft:lime_dye'])
		event.shapeless('8x kubejs:pink_unobtanium_block', ['8x architects_palette:unobtanium_block', 'minecraft:pink_dye'])
		event.shapeless('8x kubejs:gray_unobtanium_block', ['8x architects_palette:unobtanium_block', 'minecraft:gray_dye'])
		event.shapeless('8x kubejs:light_gray_unobtanium_block', ['8x architects_palette:unobtanium_block', 'minecraft:light_gray_dye'])
		event.shapeless('8x kubejs:cyan_unobtanium_block', ['8x architects_palette:unobtanium_block', 'minecraft:cyan_dye'])
		event.shapeless('8x kubejs:blue_unobtanium_block', ['8x architects_palette:unobtanium_block', 'minecraft:blue_dye'])
		event.shapeless('8x kubejs:brown_unobtanium_block', ['8x architects_palette:unobtanium_block', 'minecraft:brown_dye'])
		event.shapeless('8x kubejs:green_unobtanium_block', ['8x architects_palette:unobtanium_block', 'minecraft:green_dye'])
		event.shapeless('8x kubejs:red_unobtanium_block', ['8x architects_palette:unobtanium_block', 'minecraft:red_dye'])
		event.shapeless('8x kubejs:purple_unobtanium_block', ['8x architects_palette:unobtanium_block', 'minecraft:purple_dye'])
		event.shapeless('8x kubejs:black_unobtanium_block', ['8x architects_palette:unobtanium_block', 'minecraft:black_dye'])
		event.shapeless('1x kubejs:rainbow_unobtanium_block', ['1x architects_palette:unobtanium_block', 'minecraft:red_dye', 'minecraft:orange_dye', 'minecraft:yellow_dye', 'minecraft:green_dye', 'minecraft:cyan_dye', 'minecraft:blue_dye', 'minecraft:purple_dye', 'minecraft:white_dye'])
})

onEvent('item.tags', event => {
    const framedBlacklist = event.get('functionalstorage:framed_blacklist')
    Item.getList().forEach((item) => {

        const itemStr = item.toString().replace("'", "")
        if (itemStr.startsWith('chipped:')) {

            framedBlacklist.add(itemStr)
        }
	})
})
onEvent('block.tags', event => {
    console.log('Block tags')
    const textureBlacklsit = event.get('secretroomsmod:texture_blacklist')
    Block.getTypeList().forEach((block) => {
        // remove the ' from the start and the end of the string
        const blockStr = block.toString().replace("'", "")
        if (blockStr.startsWith('chipped:')) {
            // console.log('Adding ' + blockStr + ' to the texture blacklist')
            textureBlacklsit.add(blockStr)
        }
    })
})
// Script for KubeJS to drop an item when its block is broken
onEvent('block.break', event => {
    console.log(`Block broken: ${event.block.id}`); // Log the block ID being broken

    if (event.block.id === 'woldsvaults:vault_salvager') {
        console.log('Vault Salvager block detected. Checking drops...');

        // Check if `event.drops` is defined
        if (event.drops) {
            event.drops.clear(); // Clear existing drops
            event.drops.add('woldsvaults:vault_salvager'); // Add the block itself as a drop
            console.log('Vault Salvager drop added using event.drops.');
        } else {
            console.log('No default drops found for this block. Manually summoning item...');
            // Use a server command to summon the item at the block's position
            event.server.runCommand(
                `summon item ${event.block.x + 0.5} ${event.block.y + 0.5} ${event.block.z + 0.5} {Item:{id:"woldsvaults:vault_salvager",Count:1b}}`
            );
            console.log('Vault Salvager manually summoned at block position.');
        }
    } else {
        console.log(`This is not the Vault Salvager block. It is: ${event.block.id}`);
    }
});



	// Get the #forge:cobblestone tag collection and add Diamond Ore to it
	// event.get('forge:cobblestone').add('minecraft:diamond_ore')

	// Get the #forge:cobblestone tag collection and remove Mossy Cobblestone from it
	// event.get('forge:cobblestone').remove('minecraft:mossy_cobblestone')